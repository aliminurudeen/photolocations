{"version":3,"sources":["webpack:///./client/components/Contact.jsx","webpack:///./client/actions/contact.js"],"names":["ReactGA","initialize","pageview","window","location","pathname","search","Contact","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","name","email","message","language","handleChange","bind","_assertThisInitialized","handleSubmit","resetForm","_inherits","React","Component","_createClass","key","value","i18n","changeLanguage","e","_this2","preventDefault","newMessage","sendMail","then","response","console","log","_e$target","target","setState","_defineProperty","document","getElementById","reset","_this$props","t","react_default","a","createElement","className","src","alt","id","onSubmit","method","htmlFor","type","onChange","rows","cols","withNamespaces","connect","errorMessage","receiveLanguage","dispatch","request","post","send","res","body","msg","catch","showError"],"mappings":"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","file":"5.bundle.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { sendMail } from '../actions/contact'\r\nimport ReactGA from 'react-ga'\r\nimport i18n from 'i18next'\r\nimport { withNamespaces } from 'react-i18next'\r\n\r\nReactGA.initialize('UA-124825499-1')\r\nReactGA.pageview(window.location.pathname + window.location.search)\r\n\r\nexport class Contact extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: null,\r\n      email: null,\r\n      message: null,\r\n      language: this.props.language\r\n    }\r\n    this.handleChange = this.handleChange.bind(this)\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.resetForm = this.resetForm.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    i18n.changeLanguage(this.state.language)\r\n  }\r\n\r\n  handleSubmit(e) {\r\n\r\n    e.preventDefault()\r\n    const newMessage = {\r\n      name: this.state.name,\r\n      email: this.state.email,\r\n      message: this.state.message\r\n    }\r\n    this.props.sendMail(newMessage)\r\n      .then((response) => {\r\n        console.log(response)\r\n        if (response === 'success') {\r\n          this.resetForm()\r\n        }\r\n      })\r\n\r\n  }\r\n\r\n  handleChange(e) {\r\n    const { name, value } = e.target\r\n    this.setState({\r\n      [name]: value\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    document.getElementById('contactForm').reset()\r\n  }\r\n\r\n  render() {\r\n    let { t, i18n } = this.props\r\n    return (\r\n      <div className='contact'>\r\n        <img src='/images/Muriwai.jpg' alt='Muriwai' />\r\n        <div className='contactText'>\r\n          <h1>{t('contact.contact_header')}</h1>\r\n          {this.props.message && <span className='error'>{this.props.message}</span>}\r\n          <form className='contactForm' id='contactForm' onSubmit={this.handleSubmit} method=\"POST\">\r\n            <label htmlFor='name'>{t('contact.name')}</label>\r\n            <br />\r\n            <input type='text' name='name' id='name' onChange={this.handleChange} />\r\n            <br />\r\n            <label htmlFor='email'>{t('contact.email')}</label><br />\r\n            <input type='email' name='email' id='email' onChange={this.handleChange} /> <br />\r\n            <label htmlFor='message'>{t('contact.message')}</label><br />\r\n            <textarea rows='10' cols='50' name='message' id='message' onChange={this.handleChange}>\r\n            </textarea>\r\n            <br />\r\n            <button className='button' type='submit' id='contactFormSubmit'>{t('contact.send')}</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    sendMail: (newMessage) => {\r\n      return dispatch(sendMail(newMessage))\r\n    }\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    message: state.errorMessage,\r\n    language: state.receiveLanguage\r\n  }\r\n}\r\n\r\n\r\nexport default withNamespaces('strings')(connect(mapStateToProps, mapDispatchToProps)(Contact))\r\n","import request from 'superagent'\r\nimport {showError} from './error'\r\n\r\nexport function sendMail(message) {\r\n  return (dispatch) => {\r\n    return request\r\n      .post('/api/v1/nodemailer/send')\r\n      .send(message)\r\n      .then((res) => {\r\n        if(res.body.msg === 'success'){\r\n              console.log('Message sent')\r\n            } else if(res.body.msg === 'fail'){\r\n              console.log('Message failed to send')\r\n            }\r\n        return res.body.msg\r\n      })\r\n      .catch(() => {\r\n        dispatch(showError('Could not send mail'))\r\n      })\r\n  }\r\n}\r\n"],"sourceRoot":""}